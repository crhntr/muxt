env GOLINE=11
env GOPACKAGE=server
env GOFILE=template.go

generate

exec go test -cover

-- template.gohtml --
{{define "PATCH /" }}
	<h1>Greetings</h1>
{{end}}

-- go.mod --
module server

go 1.22

-- template.go --
package server

import (
	"embed"
	"html/template"
)

//go:embed *.gohtml
var formHTML embed.FS

//go:generate go run github.com/crhntr/muxt/cmd/muxt
var templates = template.Must(template.ParseFS(formHTML, "*"))

-- template_test.go --
package server

import (
	"strings"
	"testing"
	"net/http"
	"net/http/httptest"
)

func Test(t *testing.T) {
	mux := http.NewServeMux()

	TemplateRoutes(mux, nil)

	req := httptest.NewRequest(http.MethodPatch, "/", nil)
	rec := httptest.NewRecorder()

	mux.ServeHTTP(rec, req)

	res := rec.Result()

	if res.StatusCode != http.StatusOK {
		t.Error("expected OK")
	}

	if body := rec.Body.String(); !strings.Contains(body, "Greetings") {
  		t.Errorf("expected %q to contain Greetings", body)
  	}
}