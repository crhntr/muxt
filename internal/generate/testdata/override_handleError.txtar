env GOLINE=13
env GOPACKAGE=server
env GOFILE=template.go

generate
! stdout handleError

exec go test -v -cover
stdout 'PASS'

-- template.gohtml --
{{define "GET /" }}
	<h1>{{ index -1 .URL.Path }}</h1>
{{end}}

-- go.mod --
module server

go 1.22

-- template.go --
package server

import (
	"embed"
	"html/template"
	"net/http"
	"fmt"
)

//go:embed *.gohtml
var formHTML embed.FS

//go:generate go run github.com/crhntr/muxt/cmd/muxt
var templates = template.Must(template.ParseFS(formHTML, "*"))

func handleError(res http.ResponseWriter, _ *http.Request, t *template.Template, code int, err error) {
	fmt.Println("ERROR", err)
	http.Error(res, err.Error(), code)
}

-- template_test.go --
package server

import (
	"testing"
	"net/http"
	"net/http/httptest"
)

func Test(t *testing.T) {
	mux := http.NewServeMux()

	TemplateRoutes(mux, nil)

	req := httptest.NewRequest(http.MethodGet, "/", nil)
	rec := httptest.NewRecorder()

	mux.ServeHTTP(rec, req)

	res := rec.Result()

	if res.StatusCode != http.StatusInternalServerError {
		t.Error("expected Internal Server Error")
	}
}