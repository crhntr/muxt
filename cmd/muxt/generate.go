package main

import (
	"bytes"
	"fmt"
	"io"
	"log"
	"os"
	"path/filepath"
	"time"

	"github.com/crhntr/muxt/internal/configuration"
	"github.com/crhntr/muxt/internal/muxt"
)

const (
	CodeGenerationComment = `// Code generated by muxt. DO NOT EDIT.` + "\n"
	CodeGenerationLicense = `// MIT License
//
// Copyright (c) %d %s
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
`
)

func generateCommand(workingDirectory string, args []string, getEnv func(string) string, stdout, stderr io.Writer) error {
	config, err := configuration.NewRoutesFileConfiguration(args, stderr)
	if err != nil {
		return err
	}
	s, err := muxt.TemplateRoutesFile(workingDirectory, log.New(stdout, "", 0), config)
	if err != nil {
		return err
	}
	var sb bytes.Buffer
	writeCodeGenerationComment(&sb)
	sb.WriteString(s)
	return os.WriteFile(filepath.Join(workingDirectory, config.OutputFileName), sb.Bytes(), 0o644)
}

func writeCodeGenerationComment(w io.StringWriter) {
	_, _ = w.WriteString(fmt.Sprintf(CodeGenerationComment))
	if v, ok := cliVersion(); ok {
		_, _ = w.WriteString("// muxt version: ")
		_, _ = w.WriteString(v)
		_, _ = w.WriteString("\n//\n")
	}
	_, _ = w.WriteString(fmt.Sprintf(CodeGenerationLicense, time.Now().Year(), "Christopher Hunter"))
}
