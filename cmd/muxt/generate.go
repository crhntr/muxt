package main

import (
	"bytes"
	"io"
	"log"
	"os"
	"path/filepath"

	"github.com/crhntr/muxt"
	"github.com/crhntr/muxt/internal/configuration"
)

const (
	CodeGenerationComment      = "// Code generated by muxt. DO NOT EDIT."
	experimentCheckTypesEnvVar = "MUXT_EXPERIMENT_CHECK_TYPES"
)

func generateCommand(workingDirectory string, args []string, getEnv func(string) string, stdout, stderr io.Writer) error {
	config, err := configuration.NewRoutesFileConfiguration(args, stderr)
	if err != nil {
		return err
	}
	config.ExperimentalCheckTypes = getEnv(experimentCheckTypesEnvVar) == "true"
	s, err := muxt.TemplateRoutesFile(workingDirectory, log.New(stdout, "", 0), config)
	if err != nil {
		return err
	}
	var sb bytes.Buffer
	writeCodeGenerationComment(&sb)
	sb.WriteString(s)
	return os.WriteFile(filepath.Join(workingDirectory, config.OutputFileName), sb.Bytes(), 0o644)
}

func writeCodeGenerationComment(w io.StringWriter) {
	_, _ = w.WriteString(CodeGenerationComment)
	if v, ok := cliVersion(); ok {
		_, _ = w.WriteString("\n// muxt version: ")
		_, _ = w.WriteString(v)
		_, _ = w.WriteString("\n\n")
	}
}
