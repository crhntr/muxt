muxt generate
! stdout execute

exec go test -v -cover
stdout '^execute input type \*http.Request$'

-- template.gohtml --
{{define "PATCH /" }}
	<h1>Greetings</h1>
{{end}}

-- go.mod --
module server

go 1.22
-- template.go --
package server

import (
	"embed"
	"fmt"
	"html/template"
	"net/http"
)

//go:embed *.gohtml
var formHTML embed.FS

var templates = template.Must(template.ParseFS(formHTML, "*"))

func execute(res http.ResponseWriter, _ *http.Request, writeHeader bool, name string, code int, data any) {
	fmt.Printf("execute input type %T\n", data)
	if writeHeader {
		res.WriteHeader(code)
	}
	templates.ExecuteTemplate(res, name, data)
}
-- template_test.go --
package server

import (
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"
)

func Test(t *testing.T) {
	mux := http.NewServeMux()

	routes(mux, nil)

	req := httptest.NewRequest(http.MethodPatch, "/", nil)
	rec := httptest.NewRecorder()

	mux.ServeHTTP(rec, req)

	res := rec.Result()

	if res.StatusCode != http.StatusOK {
		t.Error("expected OK")
	}

	if body := rec.Body.String(); !strings.Contains(body, "Greetings") {
		t.Errorf("expected %q to contain Greetings", body)
	}
}
