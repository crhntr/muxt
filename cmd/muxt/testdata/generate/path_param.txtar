muxt generate --routes-func=TemplateRoutes

exec go test -cover

-- template.gohtml --
{{define "GET /fruits/{name}/tree ToUpper(name)" }}
	<h1>Fruit {{.Name}}</h1>
{{end}}

-- go.mod --
module server

go 1.22

-- template.go --
package server

import (
	"embed"
	"html/template"
)

//go:embed *.gohtml
var formHTML embed.FS

var templates = template.Must(template.ParseFS(formHTML, "*"))
-- template_test.go --
package server

import (
	"net/http"
	"net/http/httptest"
	"strings"
	"testing"
)

type T struct{}

type Data struct {
	Name string
}

func (T) ToUpper(in string) any { return Data{Name: strings.ToUpper(in)} }

func Test(t *testing.T) {
	mux := http.NewServeMux()

	TemplateRoutes(mux, T{})

	req := httptest.NewRequest(http.MethodGet, "/fruits/peach/tree", nil)
	rec := httptest.NewRecorder()

	mux.ServeHTTP(rec, req)

	res := rec.Result()

	if res.StatusCode != http.StatusOK {
		t.Error("expected OK")
	}

	if body := rec.Body.String(); !strings.Contains(body, "PEACH") {
		t.Errorf("expected %q to contain PEACH", body)
	}
}
