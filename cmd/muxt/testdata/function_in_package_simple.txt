muxt generate

exec go test -cover

muxt check

-- template.gohtml --
{{define "GET / function(ctx)" }}{{.}}{{end}}

-- go.mod --
module server

go 1.22
-- template.go --
package server

import (
	"context"
	"embed"
	"html/template"
)

//go:embed *.gohtml
var formHTML embed.FS

var templates = template.Must(template.ParseFS(formHTML, "*"))

func function(ctx context.Context) int { return 32 }

type Server struct{}
-- template_test.go --
package server

import (
	"io"
	"strings"
	"testing"

	"net/http"
	"net/http/httptest"
)

func Test(t *testing.T) {
	mux := http.NewServeMux()

	routes(mux, nil)

	req := httptest.NewRequest(http.MethodGet, "/", nil)
	rec := httptest.NewRecorder()

	mux.ServeHTTP(rec, req)

	res := rec.Result()

	if res.StatusCode != http.StatusOK {
		t.Error("expected OK")
	}

	if body, err := io.ReadAll(res.Body); err != nil {
		t.Error(err.Error())
	} else if !strings.Contains(string(body), "32") {
		t.Errorf("expected to see 32 in response got: %q", string(body))
	}
}
