{
	"filename": "templates.go",
	"line": 12
}

-- go.mod --
module hello

-- hello.gohtml --
{{define "GET /"}}
<p>Hello, world!</p>
{{end}}

-- templates.go --
package hello

import (
	"embed"
	"html/template"
)

var (
	//go:embed *.gohtml
	templateSource embed.FS

	//go:generate muxt --function=Handlers
	templates = template.Must(template.ParseFS(templateSource, "*.gohtml"))
)

-- templates.go.expect --
package hello

import (
	"bytes"
	"embed"
	"html/template"
	"net/http"
	"strconv"
)

var (
	//go:embed *.gohtml
	templateSource embed.FS

	//go:generate muxt --function=Handlers
	templates = template.Must(template.ParseFS(templateSource, "*.gohtml"))
)

func Handlers(mux *http.ServeMux) {
	execute := func(res http.ResponseWriter, req *http.Request, code int, t *template.Template, data any) {
		b := bytes.NewBuffer(nil)
		if err := t.Execute(b, data); err != nil {
			http.Error(res, err.Error(), http.StatusInternalServerError)
			return
		}
		res.Header().Set("content-type", "text/html; charset=utf-8")
		res.Header().Set("content-length", strconv.Itoa(b.Len()))
		res.WriteHeader(code)
		_, _ = b.WriteTo(res)
	}
	mux.HandleFunc("GET /", func(res http.ResponseWriter, req *http.Request) {
    execute(res, req, templates.Lookup("GET /"), http.StatusOK, struct{}{})
  })
}
